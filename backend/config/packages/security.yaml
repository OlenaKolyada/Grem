security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login
            stateless: true
            security: false

        api:
            pattern: ^/api
            stateless: true
            custom_authenticator: App\Security\TokenAuthenticator
            logout:
                path: /api/logout

    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/logout, roles: PUBLIC_ACCESS }
        - { path: ^/api/news/\d+$, roles: PUBLIC_ACCESS }
        - { path: ^/api/news$, roles: PUBLIC_ACCESS }
        - { path: ^/api/review/\d+$, roles: PUBLIC_ACCESS }
        - { path: ^/api/review$, roles: PUBLIC_ACCESS }
        - { path: ^/api/game/\d+$, roles: PUBLIC_ACCESS }
        - { path: ^/api/game$, roles: PUBLIC_ACCESS }
        - { path: ^/api/tag/\d+$, roles: PUBLIC_ACCESS }
        - { path: ^/api/tag$, roles: PUBLIC_ACCESS }
        - { path: ^/api/genre/\d+$, roles: PUBLIC_ACCESS }
        - { path: ^/api/genre$, roles: PUBLIC_ACCESS }
        - { path: ^/api/developer/\d+$, roles: PUBLIC_ACCESS }
        - { path: ^/api/developer$, roles: PUBLIC_ACCESS }
        - { path: ^/api/publisher/\d+$, roles: PUBLIC_ACCESS }
        - { path: ^/api/publisher$, roles: PUBLIC_ACCESS }
        - { path: ^/api/platform/\d+$, roles: PUBLIC_ACCESS }
        - { path: ^/api/platform$, roles: PUBLIC_ACCESS }
        - { path: ^/api/doc, roles: PUBLIC_ACCESS }
        - { path: ^/api/.+/resolve/.+$, roles: PUBLIC_ACCESS }
        - { path: ^/api/news/resolve/, roles: PUBLIC_ACCESS }
        - { path: ^/api/news/[ ^/ ]+$, roles: PUBLIC_ACCESS }

        # Защита пользовательских данных
        - { path: ^/api/user/\d+$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/user$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/profile$, roles: IS_AUTHENTICATED_FULLY }

        # По умолчанию весь /api требует авторизации
        - { path: ^/api/latest, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon